***Write a function that randomly returns “rock”, “paper” or “scissors”.************************************************
getComputerChoice {    
computerChoice = random(one of three “rock”, “paper” or “scissors”.)
return computerChoice
}
console.log(getComputerChoice())
********************************************************************************************************************

***** Write a function that takes the user choice and returns it.  ****************************************************************
getHumanChoice {    
humanChoice = prompt(one of three “rock”, “paper” or “scissors”.)
return humanChoice
}
console.log(getHumanChoice())
********************************************************************************************************************

***** Declare the players score variables  ****************************************************************
Create two new variables named humanScore and computerScore in the global scope.
Initialize those variables with the value of 0.
********************************************************************************************************************

***** Write the logic to play a single round  ****************************************************************
round (getComputerChoice, getHumanChoice) {
if human = computer, "It is a tie." / exit
if human rock and computer scissor, "Human wins the round." / humanScore +1
else if human papper and computer rock, "Human wins the round." /  humanScore +1
else if human scissor and computer papper, "Human wins the round." /  humanScore +1
else "Computer wins the round." / computerScore +1
return humanScore computerScore
}
console.log(`Human's score is $humanScore, and the Computer's score is $computerScore.`)
********************************************************************************************************************

***** Create a new function named playRound.
playRound
Define two parameters as arguments: humanChoice and computerChoice. 
Make humanChoice case-insensitive.
Console.log detailed round winner messages.
Increment the humanScore or computerScore variable based on the round winner.

Step 6: Write the logic to play the entire game
Your game will play 5 rounds. You will write a function named playGame that calls playRound to play 5 rounds, keeps track of the scores and declares a winner at the end.

Create a new function named playGame.
Move your playRound function and score variables so that they’re declared inside of the new playGame function
Play 5 rounds by calling playRound 5 times.
Hint: When you assign a function call to a variable, the return value of that function is assigned to the variable. Accessing the variable afterward will only provide the assigned value; it doesn’t recall the function. You need to recall the choice functions to get new choices for each round.
Re-work your previous functions or create more helper functions if necessary. Specifically, you may want to change the return values to something more useful.
If you already know about loops, you can use them. If not, don’t worry! Loops will be covered in the next lesson.
	
	
	
	
	Draw the flow or a state diagram.
	Pseudocode a solution.
	Create a new Git repository for your project.
	Create a blank HTML document with a script tag. (Add Boiler Plate files)
	Write the code.  (commit early and often!)
	Test the code.
	




